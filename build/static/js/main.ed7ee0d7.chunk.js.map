{"version":3,"sources":["Redux/constants.js","Redux/actions/count.js","containers/Count/index.jsx","containers/Person/index.jsx","Redux/actions/person.js","App.jsx","Redux/reducers/person.js","Redux/reducers/index.js","Redux/reducers/count.js","Redux/store.js","index.js"],"names":["INCREMENT","DECREMENT","ADD_PERSON","increment","data","type","Count","state","car","value","selectNumber","props","decrement","incrementIfOdd","count","incrementAsync","this","persons","ref","c","onClick","Component","connect","length","time","dispatch","setTimeout","Person","addPerson","name","nameNode","age","ageNode","personObj","id","nanoid","placeholder","map","p","App","initState","combineReducers","preState","action","createStore","reducer","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.ed7ee0d7.chunk.js","sourcesContent":["/*\r\n該模塊是用於定義action對象中，type類型的常量值,目的只有一個: 便於管理的同時防止編碼時寫錯字串。\r\n\r\n*/\r\nexport const INCREMENT = 'increment'\r\nexport const DECREMENT = 'decrement'\r\nexport const ADD_PERSON = 'add_person'","/*\r\n\r\n專門為count組件建立action對象\r\n\r\n*/\r\nimport {INCREMENT,DECREMENT} from '../constants'\r\n//同步action, action 的值為 Object 的一般對象\r\nexport const  increment = data=>({type:INCREMENT,data})\r\nexport const  decrement = data=>({type:DECREMENT,data})\r\n//異步action, 就是指action的值為函數。 異步action中，一般都會調用同步 action;異步action不是必須要用的\r\nexport const  incrementAsync = (data,time) => {\r\n    return (dispatch) => {\r\n        setTimeout( () => {\r\n            dispatch(increment(data))\r\n        },time)\r\n    }\r\n}\r\n\r\n","\r\nimport React, { Component } from 'react'\r\nimport {\r\n    increment,\r\n    decrement,\r\n    incrementAsync} from '../../Redux/actions/count'\r\n//引入connect用於連接UI組件與Redux\r\nimport {connect} from 'react-redux'\r\n//定義UI組件\r\nclass Count extends Component {\r\n    state = { car:'奔馳63' }\r\n\r\n    //加法\r\n    increment =()=>{\r\n        const {value} = this.selectNumber //選中的數字\r\n        this.props.increment(value*1);\r\n    }\r\n    //剪法\r\n    decrement =()=>{\r\n        const {value} = this.selectNumber //選中的數字\r\n        this.props.decrement(value*1);\r\n    }\r\n    //奇數再加\r\n    incrementIfOdd =()=>{\r\n        const {value} = this.selectNumber //選中的數字\r\n        if(this.props.count % 2 !==0){\r\n            this.props.increment(value*1);\r\n        }\r\n    }\r\n    //異步加\r\n    incrementAsync =()=>{\r\n        const {value} = this.selectNumber //選中的數字\r\n        this.props.incrementAsync(value*1,500);\r\n    }\r\n\r\n    render() {\r\n        // console.log('ui組件接受到的props是',this.props);\r\n        return (\r\n            <div>\r\n                <h2>我是Count組件,下方組件總人數為{this.props.persons}</h2>\r\n                <h4>當前的和為: {this.props.count}</h4>\r\n                <select ref={c => this.selectNumber =c}>\r\n                    <option value=\"1\">1</option>\r\n                    <option value=\"2\">2</option>\r\n                    <option value=\"3\">3</option>\r\n                </select>&nbsp;\r\n                <button onClick={this.increment}>+</button>&nbsp;\r\n                <button onClick={this.decrement}>-</button>&nbsp;\r\n                <button onClick={this.incrementIfOdd}>當前求和為奇數再加</button>&nbsp;\r\n                <button onClick={this.incrementAsync}>異步加</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n//使用connect()()創建並暴露一個Count的容器組件\r\nexport default  connect(\r\n    state=> ({\r\n        count:state.count,\r\n        persons:state.persons.length\r\n    }),//映射狀態\r\n\r\n    //mapDispatchToProps的簡寫\r\n    {increment, decrement, incrementAsync}//映射操作狀態的方法\r\n    )(Count)\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport {nanoid} from 'nanoid'\r\nimport {connect} from 'react-redux'\r\nimport {addPerson} from '../../Redux/actions/person'\r\nclass Person extends Component {\r\n    addPerson=()=>{\r\n        const name =this.nameNode.value\r\n        const age =this.ageNode.value*1\r\n        const personObj = {id:nanoid(),name,age}\r\n        this.props.addPerson(personObj)\r\n        this.nameNode.value=''\r\n        this.ageNode.value=''\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>我是Person組件,上方組件求和為{this.props.count}</h2>\r\n                <input ref={c=>this.nameNode=c}type=\"text\" placeholder=\"輸入名字\"/>\r\n                <input ref={c=>this.ageNode=c}type=\"text\" placeholder=\"輸入年齡\"/>\r\n                <button onClick={this.addPerson}>添加</button>\r\n                <ul>\r\n                {\r\n                    this.props.persons.map((p)=>{\r\n                        return <li key={p.id}>名字{p.name}----年齡{p.age}</li>\r\n                    })\r\n                }\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    state => ({\r\n        persons:state.persons,\r\n        count:state.count\r\n    }),//映射狀態\r\n    {addPerson},//映射操作狀態的方法\r\n)(Person)","import {ADD_PERSON} from '../../Redux/constants'\r\n\r\n//創建增加一個人的action動作對象\r\nexport const addPerson = personObj =>({type:ADD_PERSON,data:personObj})","import React, { Component } from 'react'\r\nimport Count from './containers/Count';//引入Count的容器組件\r\nimport Person from './containers/Person';//引入Person的容器組件\r\n\r\nexport default class App extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n               <Count />\r\n               <hr></hr>\r\n               <Person />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import {ADD_PERSON} from '../constants'\r\n\r\n//初始化人的列表\r\nconst initState =[{id:'001',name:'tom',age:18}]//初始化狀態\r\nexport default function personReducer(preState=initState,action){\r\n    // console.log('personReducer@#@#')\r\n    const {type,data } = action\r\n    switch (type){\r\n        case ADD_PERSON://若是添加一個人，\r\n            //preState.unshift(data) //此處不可以這樣寫，這樣會導致preState被改寫了，personReducer就不再是純函數。\r\n            return [data,...preState]\r\n        default :\r\n            return preState\r\n    }\r\n}","/* \r\n該文件用於彙總所有的reducer為一個彙總的reducer\r\n*/\r\n//引入combineReducers,用於彙總多個reducer\r\nimport {combineReducers} from 'redux'\r\n//引入為Count組件服務的reducer\r\nimport count from './count'\r\n//引入為Person組件服務的reducer\r\nimport persons from './person'\r\n\r\n//彙總所有的reducer，變為一個reducer的集合\r\nexport default combineReducers({\r\n    count,\r\n    persons,\r\n}) \r\n\r\n ","/*\r\n1. 該文件是用於創建一個為Count組件服務的reducer,reducer的本質就是一個函數\r\n2. reducer函數會接到兩個參數，分別為之前的狀態(preState) , 動作對象(action)\r\n*/\r\nimport {INCREMENT,DECREMENT} from '../constants'\r\nconst initState =0\r\nexport default function countReducer(preState=initState,action){\r\n    // 從action 對象中取得type,data\r\n    const {type,data} = action\r\n    //根據type決定如何加工數據\r\n\r\n    switch (type){\r\n        case INCREMENT://如果是加\r\n            return preState + data\r\n        case DECREMENT://如果是減\r\n            return preState - data\r\n        default :\r\n            return preState;\r\n    }\r\n\r\n    \r\n\r\n\r\n\r\n}","/*\r\n本文件專門用於export 一個store對象，整個應用只有一個store對象\r\n*/\r\n\r\n//引入createStore, 專門用於創建redux中最為核心的redux對象\r\nimport {createStore,applyMiddleware} from 'redux'\r\n//引入彙總的allReducer\r\nimport reducer from './reducers'\r\n//引入redux-thunk 用於支持異步action\r\nimport thunk from 'redux-thunk'\r\n//引入redux-devtools-extension\r\nimport{composeWithDevTools} from 'redux-devtools-extension'\r\n\r\n\r\n//export store\r\nexport default  createStore(reducer,composeWithDevTools(applyMiddleware(thunk)))\r\n\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport store from './Redux/store';\r\nimport {Provider} from 'react-redux';\r\n\r\nReactDOM.render(\r\n    /*  此處需要用Provider包裹APP，目的是讓App的所有後代容器組件，都能接收到store */\r\n    <Provider store={store}>\r\n        <App/>\r\n    </Provider>\r\n,document.getElementById('root'))\r\n\r\n"],"sourceRoot":""}